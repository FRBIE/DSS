# Generated by Django 5.1.7 on 2025-07-03 20:21

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Archive',
            fields=[
                ('id', models.AutoField(help_text='档案id', primary_key=True, serialize=False)),
                ('archive_code', models.CharField(help_text='档案编号', max_length=255, unique=True)),
                ('archive_name', models.CharField(help_text='档案名称', max_length=255)),
                ('archive_description', models.TextField(blank=True, help_text='档案描述', null=True)),
            ],
            options={
                'verbose_name': '专病档案',
                'verbose_name_plural': '专病档案',
                'db_table': 'archive',
            },
        ),
        migrations.CreateModel(
            name='DataTemplateCategory',
            fields=[
                ('id', models.AutoField(help_text='模板分类id', primary_key=True, serialize=False)),
                ('name', models.CharField(help_text='模板分类名称', max_length=255)),
            ],
            options={
                'verbose_name': '数据模板分类',
                'verbose_name_plural': '数据模板分类表',
                'db_table': 'data_template_category',
            },
        ),
        migrations.CreateModel(
            name='Dictionary',
            fields=[
                ('id', models.AutoField(help_text='词条id', primary_key=True, serialize=False)),
                ('word_code', models.CharField(help_text='词条编号', max_length=255, unique=True)),
                ('word_name', models.CharField(db_index=True, help_text='中文名称', max_length=255)),
                ('word_eng', models.CharField(blank=True, help_text='英文名称', max_length=255, null=True)),
                ('word_short', models.CharField(blank=True, help_text='英文缩写', max_length=255, null=True)),
                ('word_class', models.CharField(help_text='词条类型', max_length=255)),
                ('word_apply', models.CharField(help_text='词条应用', max_length=255)),
                ('word_belong', models.CharField(blank=True, help_text='从属别名', max_length=255, null=True)),
                ('data_type', models.CharField(blank=True, help_text='数据类型，如数值类型、文本类型', max_length=128, null=True)),
                ('input_type', models.CharField(choices=[('single', '单选'), ('multi', '多选'), ('text', '填空'), ('date', '日期'), ('single_with_other', '单选+其他项'), ('single_with_date', '单选+日期'), ('multi_with_date', '多选+日期'), ('multi_with_text', '多选+填空'), ('hierarchical_select', '多级选择')], default='text', max_length=32, verbose_name='填写方式')),
                ('options', models.TextField(blank=True, null=True, verbose_name='主选项')),
                ('followup_options', models.JSONField(blank=True, null=True, verbose_name='后续选项')),
            ],
            options={
                'verbose_name': '系统词条',
                'verbose_name_plural': '系统词条表',
                'db_table': 'dictionary',
            },
        ),
        migrations.CreateModel(
            name='Identity',
            fields=[
                ('identity_id', models.CharField(help_text='身份证号', max_length=255, primary_key=True, serialize=False)),
                ('name', models.CharField(help_text='姓名', max_length=255)),
                ('gender', models.PositiveSmallIntegerField(choices=[(0, '女'), (1, '男')], help_text='性别 0-女 1-男')),
                ('birth_date', models.DateField(help_text='出生年月日')),
            ],
            options={
                'verbose_name': '患者身份',
                'verbose_name_plural': '患者表',
                'db_table': 'identity',
            },
        ),
        migrations.CreateModel(
            name='ArchiveCase',
            fields=[
                ('id', models.AutoField(help_text='自增主键', primary_key=True, serialize=False)),
                ('archive', models.ForeignKey(db_column='archive_id', help_text='档案id', on_delete=django.db.models.deletion.CASCADE, to='mediCore.archive')),
            ],
            options={
                'verbose_name': '档案病例关联',
                'verbose_name_plural': '档案与病例关联表',
                'db_table': 'archive_case',
            },
        ),
        migrations.CreateModel(
            name='Case',
            fields=[
                ('id', models.AutoField(help_text='病例id', primary_key=True, serialize=False)),
                ('case_code', models.CharField(help_text='病例编号', max_length=255, unique=True)),
                ('opd_id', models.CharField(blank=True, help_text='门诊号', max_length=255, null=True)),
                ('inhospital_id', models.CharField(blank=True, help_text='住院号', max_length=255, null=True)),
                ('name', models.CharField(help_text='姓名', max_length=255)),
                ('gender', models.PositiveSmallIntegerField(choices=[(0, '女'), (1, '男')], help_text='性别 0-女 1-男')),
                ('birth_date', models.DateField(help_text='出生年月日')),
                ('phone_number', models.CharField(blank=True, help_text='联系电话', max_length=36, null=True)),
                ('home_address', models.CharField(blank=True, help_text='家庭住址', max_length=512, null=True)),
                ('blood_type', models.CharField(blank=True, help_text='血型', max_length=10, null=True)),
                ('main_diagnosis', models.CharField(blank=True, help_text='主要诊断', max_length=1024, null=True)),
                ('has_transplant_surgery', models.CharField(blank=True, default='未填写', help_text='是否行移植手术,示例 是(2025-5-27)', max_length=255, null=True)),
                ('is_in_transplant_queue', models.CharField(blank=True, default='未填写', help_text='是否存在移植排队', max_length=16, null=True)),
                ('archives', models.ManyToManyField(related_name='cases', through='mediCore.ArchiveCase', to='mediCore.archive')),
                ('identity', models.ForeignKey(db_column='identity_id', help_text='身份证号', on_delete=django.db.models.deletion.CASCADE, to='mediCore.identity')),
            ],
            options={
                'verbose_name': '病例',
                'verbose_name_plural': '病例表',
                'db_table': 'case',
            },
        ),
        migrations.AddField(
            model_name='archivecase',
            name='case',
            field=models.ForeignKey(db_column='case_id', help_text='病例id', on_delete=django.db.models.deletion.CASCADE, to='mediCore.case'),
        ),
        migrations.CreateModel(
            name='DataTemplate',
            fields=[
                ('id', models.AutoField(help_text='数据模板id', primary_key=True, serialize=False)),
                ('template_code', models.CharField(help_text='模板编号', max_length=255, unique=True)),
                ('template_name', models.CharField(help_text='模板名称', max_length=255)),
                ('template_description', models.TextField(blank=True, help_text='模板描述', null=True)),
                ('category', models.ForeignKey(db_column='category_id', help_text='模板分类id', on_delete=django.db.models.deletion.CASCADE, to='mediCore.datatemplatecategory')),
            ],
            options={
                'verbose_name': '数据模板',
                'verbose_name_plural': '数据模板',
                'db_table': 'data_template',
                'ordering': ['template_code'],
            },
        ),
        migrations.CreateModel(
            name='DataTemplateDictionary',
            fields=[
                ('id', models.AutoField(help_text='自增id', primary_key=True, serialize=False)),
                ('data_template', models.ForeignKey(db_column='data_template_id', help_text='数据模板id', on_delete=django.db.models.deletion.CASCADE, to='mediCore.datatemplate')),
                ('dictionary', models.ForeignKey(db_column='dictionary_id', help_text='词条id', on_delete=django.db.models.deletion.CASCADE, to='mediCore.dictionary')),
            ],
            options={
                'verbose_name': '模板词条关系',
                'verbose_name_plural': '模板词条关系',
                'db_table': 'data_template_dictionary',
                'unique_together': {('data_template', 'dictionary')},
            },
        ),
        migrations.AddField(
            model_name='datatemplate',
            name='dictionaries',
            field=models.ManyToManyField(related_name='data_templates', through='mediCore.DataTemplateDictionary', to='mediCore.dictionary'),
        ),
        migrations.CreateModel(
            name='Images',
            fields=[
                ('id', models.AutoField(help_text='自增主键', primary_key=True, serialize=False)),
                ('url', models.CharField(help_text='图片url', max_length=255)),
                ('remark', models.CharField(blank=True, help_text='图片备注', max_length=255, null=True)),
                ('case', models.ForeignKey(db_column='case_id', help_text='病例id', on_delete=django.db.models.deletion.CASCADE, related_name='images', to='mediCore.case')),
                ('data_template', models.ForeignKey(db_column='data_template_id', help_text='数据模板id', on_delete=django.db.models.deletion.CASCADE, related_name='images', to='mediCore.datatemplate')),
            ],
            options={
                'verbose_name': '图片',
                'verbose_name_plural': '图片表',
                'db_table': 'images',
            },
        ),
        migrations.AlterUniqueTogether(
            name='archivecase',
            unique_together={('archive', 'case')},
        ),
        migrations.CreateModel(
            name='DataTable',
            fields=[
                ('id', models.AutoField(help_text='自增id', primary_key=True, serialize=False)),
                ('value', models.JSONField(help_text='值')),
                ('check_time', models.DateTimeField(help_text='检查时间')),
                ('case', models.ForeignKey(db_column='case_id', help_text='病例id', on_delete=django.db.models.deletion.CASCADE, to='mediCore.case')),
                ('data_template', models.ForeignKey(db_column='data_template_id', help_text='数据模板id', on_delete=django.db.models.deletion.CASCADE, to='mediCore.datatemplate')),
                ('dictionary', models.ForeignKey(db_column='dictionary_id', help_text='词条id', on_delete=django.db.models.deletion.CASCADE, to='mediCore.dictionary')),
            ],
            options={
                'verbose_name': '数据',
                'verbose_name_plural': '数据表',
                'db_table': 'data_table',
                'unique_together': {('case', 'data_template', 'dictionary', 'check_time')},
            },
        ),
        migrations.AddIndex(
            model_name='case',
            index=models.Index(fields=['identity'], name='idx_identity_id_on_case'),
        ),
    ]
