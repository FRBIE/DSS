# Generated by Django 4.2.7 on 2025-05-27 09:22

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Archive",
            fields=[
                (
                    "id",
                    models.AutoField(
                        primary_key=True, serialize=False, verbose_name="档案id"
                    ),
                ),
                (
                    "archive_code",
                    models.CharField(max_length=255, unique=True, verbose_name="档案编号"),
                ),
                ("archive_name", models.CharField(max_length=255, verbose_name="档案名称")),
                (
                    "archive_description",
                    models.TextField(blank=True, null=True, verbose_name="档案描述"),
                ),
            ],
            options={
                "verbose_name": "档案",
                "verbose_name_plural": "档案",
                "db_table": "archive",
            },
        ),
        migrations.CreateModel(
            name="Case",
            fields=[
                (
                    "id",
                    models.AutoField(
                        primary_key=True, serialize=False, verbose_name="病例id"
                    ),
                ),
                (
                    "case_code",
                    models.CharField(max_length=255, unique=True, verbose_name="病例编号"),
                ),
                (
                    "opd_id",
                    models.CharField(
                        blank=True, max_length=255, null=True, verbose_name="门诊号"
                    ),
                ),
                (
                    "inhospital_id",
                    models.CharField(
                        blank=True, max_length=255, null=True, verbose_name="住院号"
                    ),
                ),
                ("name", models.CharField(max_length=255, verbose_name="姓名")),
                (
                    "gender",
                    models.IntegerField(
                        choices=[(0, "女"), (1, "男")], verbose_name="性别"
                    ),
                ),
                ("birth_date", models.DateTimeField(verbose_name="出生年月日")),
                (
                    "phone_number",
                    models.CharField(
                        blank=True, max_length=36, null=True, verbose_name="联系电话"
                    ),
                ),
                (
                    "home_address",
                    models.CharField(
                        blank=True, max_length=512, null=True, verbose_name="家庭住址"
                    ),
                ),
                (
                    "blood_type",
                    models.CharField(
                        blank=True, max_length=10, null=True, verbose_name="血型"
                    ),
                ),
                (
                    "main_diagnosis",
                    models.CharField(
                        blank=True, max_length=1024, null=True, verbose_name="主要诊断"
                    ),
                ),
                (
                    "has_transplant_surgery",
                    models.CharField(
                        blank=True,
                        default="未填写",
                        max_length=255,
                        null=True,
                        verbose_name="是否行移植手术",
                    ),
                ),
                (
                    "is_in_transplant_queue",
                    models.CharField(
                        blank=True,
                        default="未填写",
                        max_length=16,
                        null=True,
                        verbose_name="是否存在移植排队",
                    ),
                ),
            ],
            options={
                "verbose_name": "病例",
                "verbose_name_plural": "病例",
                "db_table": "case",
            },
        ),
        migrations.CreateModel(
            name="DataTemplate",
            fields=[
                (
                    "id",
                    models.AutoField(
                        primary_key=True, serialize=False, verbose_name="数据模板id"
                    ),
                ),
                (
                    "template_code",
                    models.CharField(max_length=255, unique=True, verbose_name="模板编号"),
                ),
                (
                    "template_name",
                    models.CharField(max_length=255, verbose_name="模板名称"),
                ),
                (
                    "template_description",
                    models.TextField(blank=True, null=True, verbose_name="模板描述"),
                ),
            ],
            options={
                "verbose_name": "数据模板",
                "verbose_name_plural": "数据模板",
                "db_table": "data_template",
            },
        ),
        migrations.CreateModel(
            name="DataTemplateCategory",
            fields=[
                (
                    "id",
                    models.AutoField(
                        primary_key=True, serialize=False, verbose_name="模板分类id"
                    ),
                ),
                ("name", models.CharField(max_length=255, verbose_name="模板分类名称")),
            ],
            options={
                "verbose_name": "数据模板分类",
                "verbose_name_plural": "数据模板分类",
                "db_table": "data_template_category",
            },
        ),
        migrations.CreateModel(
            name="Identity",
            fields=[
                (
                    "identity_id",
                    models.CharField(
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                        verbose_name="身份证号",
                    ),
                ),
                ("name", models.CharField(max_length=255, verbose_name="姓名")),
                (
                    "gender",
                    models.IntegerField(
                        choices=[(0, "女"), (1, "男")], verbose_name="性别"
                    ),
                ),
                ("birth_date", models.DateTimeField(verbose_name="出生年月日")),
            ],
            options={
                "verbose_name": "患者",
                "verbose_name_plural": "患者",
                "db_table": "identity",
            },
        ),
        migrations.CreateModel(
            name="Images",
            fields=[
                (
                    "id",
                    models.AutoField(
                        primary_key=True, serialize=False, verbose_name="自增主键"
                    ),
                ),
                ("url", models.CharField(max_length=255, verbose_name="图片url")),
                (
                    "remark",
                    models.CharField(
                        blank=True, max_length=255, null=True, verbose_name="图片备注"
                    ),
                ),
                (
                    "case",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="mediCore.case",
                        verbose_name="病例",
                    ),
                ),
                (
                    "data_template",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="mediCore.datatemplate",
                        verbose_name="数据模板",
                    ),
                ),
            ],
            options={
                "verbose_name": "图片",
                "verbose_name_plural": "图片",
                "db_table": "images",
            },
        ),
        migrations.CreateModel(
            name="Dictionary",
            fields=[
                (
                    "id",
                    models.AutoField(
                        primary_key=True, serialize=False, verbose_name="词条id"
                    ),
                ),
                (
                    "word_code",
                    models.CharField(max_length=255, unique=True, verbose_name="词条编号"),
                ),
                ("word_name", models.CharField(max_length=255, verbose_name="中文名称")),
                (
                    "word_eng",
                    models.CharField(
                        blank=True, max_length=255, null=True, verbose_name="英文名称"
                    ),
                ),
                (
                    "word_short",
                    models.CharField(
                        blank=True, max_length=255, null=True, verbose_name="英文缩写"
                    ),
                ),
                ("word_class", models.CharField(max_length=255, verbose_name="词条类型")),
                ("word_apply", models.CharField(max_length=255, verbose_name="词条应用")),
                (
                    "word_belong",
                    models.CharField(
                        blank=True, max_length=255, null=True, verbose_name="从属别名"
                    ),
                ),
                (
                    "data_type",
                    models.CharField(
                        blank=True, max_length=128, null=True, verbose_name="数据类型"
                    ),
                ),
            ],
            options={
                "verbose_name": "系统词条",
                "verbose_name_plural": "系统词条",
                "db_table": "dictionary",
                "indexes": [models.Index(fields=["word_name"], name="name_index")],
            },
        ),
        migrations.AddField(
            model_name="datatemplate",
            name="category",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                to="mediCore.datatemplatecategory",
                verbose_name="模板分类",
            ),
        ),
        migrations.AddField(
            model_name="case",
            name="identity",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                to="mediCore.identity",
                verbose_name="身份证号",
            ),
        ),
        migrations.CreateModel(
            name="ArchiveCase",
            fields=[
                (
                    "id",
                    models.AutoField(
                        primary_key=True, serialize=False, verbose_name="自增主键"
                    ),
                ),
                (
                    "archive",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="mediCore.archive",
                        verbose_name="档案",
                    ),
                ),
                (
                    "case",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="mediCore.case",
                        verbose_name="病例",
                    ),
                ),
            ],
            options={
                "verbose_name": "档案病例关联",
                "verbose_name_plural": "档案病例关联",
                "db_table": "archive_case",
                "unique_together": {("archive", "case")},
            },
        ),
        migrations.AddField(
            model_name="archive",
            name="cases",
            field=models.ManyToManyField(
                through="mediCore.ArchiveCase", to="mediCore.case", verbose_name="相关病例"
            ),
        ),
        migrations.CreateModel(
            name="DataTemplateDictionary",
            fields=[
                (
                    "id",
                    models.AutoField(
                        primary_key=True, serialize=False, verbose_name="自增id"
                    ),
                ),
                (
                    "data_template",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="mediCore.datatemplate",
                        verbose_name="数据模板",
                    ),
                ),
                (
                    "dictionary",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="mediCore.dictionary",
                        verbose_name="词条",
                    ),
                ),
            ],
            options={
                "verbose_name": "数据模板与词条关联表",
                "verbose_name_plural": "数据模板与词条关联表",
                "db_table": "data_template_dictionary",
                "unique_together": {("data_template", "dictionary")},
            },
        ),
        migrations.CreateModel(
            name="DataTable",
            fields=[
                (
                    "id",
                    models.AutoField(
                        primary_key=True, serialize=False, verbose_name="自增主键"
                    ),
                ),
                ("value", models.CharField(max_length=1024, verbose_name="值")),
                ("check_time", models.DateTimeField(verbose_name="检查时间")),
                (
                    "case",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="mediCore.case",
                        verbose_name="病例",
                    ),
                ),
                (
                    "data_template",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="mediCore.datatemplate",
                        verbose_name="数据模板",
                    ),
                ),
                (
                    "dictionary",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="mediCore.dictionary",
                        verbose_name="词条",
                    ),
                ),
            ],
            options={
                "verbose_name": "数据记录",
                "verbose_name_plural": "数据记录",
                "db_table": "data_table",
                "unique_together": {("case", "data_template", "dictionary")},
            },
        ),
    ]
